import requests
from typing import List

# –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ ID)
DEFAULT_EMPLOYERS: List[tuple[str, str]] = [
    ("3529", "–°–±–µ—Ä"),
    ("1740", "–Ø–Ω–¥–µ–∫—Å"),
    ("78638", "–¢-–ë–∞–Ω–∫"),
    ("2748", "–ü–ê–û –†–æ—Å—Ç–µ–ª–µ–∫–æ–º"),
    ("3776", "–ú–¢–°"),
    ("4181", "–ë–∞–Ω–∫ –í–¢–ë (–ü–ê–û)"),
    ("1122462", "Skyeng"),
    ("39305", "–ì–∞–∑–ø—Ä–æ–º –Ω–µ—Ñ—Ç—å"),
    ("84585", "–ê–≤–∏—Ç–æ"),
    ("87021", "Wildberries"),
]


def search_employer_by_name(name: str) -> list[dict]:
    """–ò—â–µ—Ç —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Ç–æ–ª—å–∫–æ —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏)."""
    url = "https://api.hh.ru/employers"
    params = {"text": name, "per_page": 10, "only_with_vacancies": True}
    resp = requests.get(url, params=params)
    resp.raise_for_status()
    return resp.json()["items"]


def select_one_employer(name: str, default_id: str | None = None) -> str | None:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è.

    Args:
        name: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.
        default_id: ID –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –≤—ã–±–æ—Ä –Ω–µ —Å–¥–µ–ª–∞–Ω.

    Returns:
        ID –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ default_id.
    """
    results = search_employer_by_name(name)
    if not results:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –¥–ª—è '{name}'")
        return default_id

    print(f"\nüîé –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è '{name}':")
    for i, emp in enumerate(results, start=1):
        print(f"{i}. {emp['name']} (ID {emp['id']}, –≤–∞–∫–∞–Ω—Å–∏–π: {emp['open_vacancies']})")

    choice = input(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏ (Enter = –≤–∑—è—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): "
    ).strip()
    if choice.isdigit() and 1 <= int(choice) <= len(results):
        return results[int(choice) - 1]["id"]

    return default_id


def choose_employer() -> list[str]:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π.
    –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –º–µ–Ω—å—à–µ 10, –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–∑ DEFAULT_EMPLOYERS.
    """
    selected_ids: list[str] = []

    raw_input = input(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ ID –∫–æ–º–ø–∞–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: –°–±–µ—Ä, –Ø–Ω–¥–µ–∫—Å, 3529): "
    ).strip()
    company_inputs = [c.strip() for c in raw_input.split(",") if c.strip()]

    for value in company_inputs:
        if value.isdigit():
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª ID –Ω–∞–ø—Ä—è–º—É—é
            emp_id = value
            print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω ID –∫–æ–º–ø–∞–Ω–∏–∏: {emp_id}")
        else:
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–∞–∑–≤–∞–Ω–∏–µ ‚Üí –∏—â–µ–º
            emp_id = select_one_employer(value)

        if emp_id and emp_id not in selected_ids:
            selected_ids.append(emp_id)

    # –¥–æ–±–∏—Ä–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—è–º–∏ –∏–∑ DEFAULT_EMPLOYERS –¥–æ 10
    if len(selected_ids) < 10:
        print(
            "\n‚ÑπÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏–ª–æ—Å—å –º–∏–Ω–∏–º—É–º 10..."
        )
        for def_id, name in DEFAULT_EMPLOYERS:
            if def_id not in selected_ids:
                selected_ids.append(def_id)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {name}: ID {def_id}")
            if len(selected_ids) >= 10:
                break

    print(f"\nüìä –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π ({len(selected_ids)}): {selected_ids}")
    return selected_ids
